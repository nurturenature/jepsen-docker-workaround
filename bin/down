#!/usr/bin/env bash

set -o errexit
set -o pipefail
set -o nounset
# set -o xtrace

ERROR() {
    printf "\e[101m\e[97m[ERROR]\e[49m\e[39m %s\n" "$@"
}

WARNING() {
    printf "\e[101m\e[97m[WARNING]\e[49m\e[39m %s\n" "$@"
}

INFO() {
    printf "\e[104m\e[97m[INFO]\e[49m\e[39m %s\n" "$@"
}

exists() {
    type "$1" > /dev/null 2>&1
}

HELP=0
NODE_COUNT=5
POSITIONAL=()

while [[ $# -gt 0 ]]
do
    key="$1"

    case $key in
        --help)
            HELP=1
            shift # past argument
            ;;
        -n|--node-count)
            NODE_COUNT=$2
            shift
            shift
            ;;
        *)
            POSITIONAL+=("$1")
            ERROR "unknown option $1"
            shift # past argument
            ;;
    esac
done
if [ "${#POSITIONAL[@]}" -gt 0 ]; then
  set -- "${POSITIONAL[@]}" # restore positional parameters
fi

if [ "${HELP}" -eq 1 ]; then
    echo "Usage: $0 [OPTION]"
    echo "  --help              Display this message"
    echo "  --node-count NUM    Number of nodes to bring down, default 5."
    exit 0
fi

exists docker ||
    { ERROR "Please install docker (https://docs.docker.com/engine/install/)";
      exit 1; }

INFO "Stopping containers..."
docker stop jepsen_control || INFO "jepsen_control container not running" 
for ((n=1;n<=NODE_COUNT;n++)); do
    docker stop jepsen_n${n} || INFO "jepsen_n${n} container not running"
done

INFO "rm containers..."
docker rm --force --volumes jepsen_control || INFO "jepsen_control container doesn't exist"
for ((n=1;n<=NODE_COUNT;n++)); do
    docker rm --force --volumes jepsen_n${n} || INFO "jepsen_n${n} container doesn't exist"
done

INFO "rm network"
docker network rm jepsen_network || INFO "jepsen_network network doesn't exist"

INFO "rm volume"
docker volume rm jepsen_shared || INFO "jepsen_shared volume doesn't exist"
